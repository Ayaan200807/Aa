# Obfuscated by the Botpalys encoder
#Time: Wed Aug 13 07:41:14 2025
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))